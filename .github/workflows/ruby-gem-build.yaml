---
name: Ruby Gem Build & Publish

on:
  workflow_call:
    inputs:
      postgres_image:
        description: "Sets the 'services.postgres.image' job argument for jobs that need a DB. This determines the image of postgres to be used (e.g. postgres:14-alpine)."
        default: "" # empty indicates it should not start service
        required: false
        type: string
      ruby-versions:
        description: "A stringified JSON array of ruby versions to test this gem with"
        default: '["3.2", "3.3"]'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    services:
      postgres:
        image: ${{ inputs.postgres_image }}
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready --health-interval 5s --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    name: Preflight Check
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ruby-version: ${{ fromJSON(inputs.ruby-versions) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ${{ matrix.ruby-version }}

      - name: Lint
        run: bundle exec rubocop

      - name: Test
        run: bundle exec rspec

  release:
    name: Release
    if: github.ref_name == 'main'
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for version bump
        id: version-check
        run: |
          if git diff --quiet HEAD^ -- lib/*/version.rb; then
            echo "Version did not change"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version did change"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi

      - uses: ruby/setup-ruby@v1
        if: steps.version-check.outputs.version_changed == 'true'
        with:
          bundler-cache: true

      - name: Release the gem
        if: steps.version-check.outputs.version_changed == 'true'
        run: |
          mkdir -p ~/.gem
          cat << EOF > ~/.gem/credentials
          ---
          :github: Bearer ${GITHUB_TOKEN}
          :rubygems_api_key: ${RUBYGEMS_API_KEY}
          EOF
          chmod 0600 ~/.gem/credentials
          git config user.email "noreply@wealthsimple.com"
          git config user.name "Wolfbot"
          bundle exec rake release
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}

  slack_failures:
    name: Notify Slack on Failure
    runs-on: ubuntu-22.04
    if: always() && github.ref_name == 'main' && contains(needs.*.result, 'failure')
    needs:
      - build
      - release
    steps:
      - name: Notify slack on failure
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.BEPLAT_PUBLIC_REPOS_SLACK_TOKEN }}
        with:
          channel-id: ${{ vars.DEVELOPER_TOOLS_ALERTS_SLACK_CHANNEL }}
          payload: |
            {
              "text": "GitHub Action failed ${{ github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Job Failed. :red_circle:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow*: ${{ github.workflow }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*:\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*:\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*:\n${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow Run"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{github.run_id}}/attempts/${{github.run_attempt}}"
                    }
                  ]
                }
              ]
            }
